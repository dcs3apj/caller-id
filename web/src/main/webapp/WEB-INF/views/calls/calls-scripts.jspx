<script type="text/javascript" xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:c="http://java.sun.com/jsp/jstl/core" version="2.0">
	<jsp:directive.page contentType="text/html;charset=UTF-8" />
	<jsp:output omit-xml-declaration="yes" />
	
	$(function() {
		$("#pageSelect").change(function() {
			window.location.href = $("#pageSelect option:selected").val();
		});
		$("#pagingNext").button({
			icons: {
				primary: "ui-icon-circle-triangle-w"
			},
			text: false
		});
		$("#pagingPrevious").button({
			icons: {
				primary: "ui-icon-circle-triangle-e"
			},
			text: false
		});
    });

	$(function() {
		$( ".callbuttons button.search" ).button({
            icons: {
                primary: "ui-icon-search"
            },
            text: false
        });
		$( ".callbuttons button.contacts" ).button({
            icons: {
                primary: "ui-icon-note"
            },
            text: false
        });
	
		$(".callbuttons").buttonset();
		$("#selectable li").click(function() {
			  $(this).addClass("ui-selected").siblings().removeClass("ui-selected");
				var index = $( "#selectable li" ).index( this );
				var address = addresses[index];
				if (address != null) {
					mapto(address.searchTerm, address.searchArea);
				}
			});
	});

    var map;
    var geocoder = new google.maps.Geocoder();
    var marker = new google.maps.Marker();
    var nearViewport;
    var markerLocation;
    var addresses = [];
	<c:forEach items="${calls}" var="call">
	<c:choose>
	<c:when
		test="${call.googleSearchTerm == null || call.googleSearchArea == null}">
		addresses.push(null);
	</c:when>
	<c:otherwise>
		addresses.push({ "searchTerm" : "${call.googleSearchTerm}", "searchArea" : "${call.googleSearchArea}"});
	</c:otherwise>
	</c:choose>
	</c:forEach>
    
	$(document).ready(function() {
		$(map).height($(calls).height());
        var mapOptions = {
                center: new google.maps.LatLng(0, 0),
                zoom: 1,
                mapTypeId: google.maps.MapTypeId.ROADMAP
              };
              map = new google.maps.Map(document.getElementById("map"),
                  mapOptions);
              google.maps.event.addListener(marker, 'click', zoom);
    });

    function zoom() {
    	map.fitBounds(nearViewport);
    	map.panTo(markerLocation);
    }
    
	function mapto(address, area) {
	    geocoder.geocode( { 'address': address, 'region' : area }, function(results, status) {
	        if (status == google.maps.GeocoderStatus.OK) {
	          markerLocation = results[0].geometry.location;
	          nearViewport = results[0].geometry.viewport;
	          geocoder.geocode({ 'address' : area }, function(results, status) { 
	        	  marker.setAnimation(google.maps.Animation.DROP);
	        	  marker.setPosition(markerLocation);
	        	  marker.setMap(map);
	        	  marker.setTitle(address);
		          map.fitBounds(results[0].geometry.viewport);               
		          map.panTo(location);		        	  
	          });
	        } else {
	          alert("Geocode was not successful for the following reason: " + status);
	        }
	      });
	    return false;
	}

</script>
