<script type="text/javascript" xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:c="http://java.sun.com/jsp/jstl/core" version="2.0">
	<jsp:directive.page contentType="text/html;charset=UTF-8" />
	<jsp:output omit-xml-declaration="yes" />
	
	$(function() {
		$( ".callbuttons a.search" ).button({
            icons: {
                primary: "ui-icon-search"
            },
            text: false
        });
		$( ".callbuttons button.contacts" ).button({
            icons: {
                primary: "ui-icon-note"
            },
            text: false
        });
	
		$(".callbuttons").buttonset();
		$(".selectable li").click(function() {
			  $(this).addClass("ui-selected").siblings().removeClass("ui-selected");
				var index = $( "#calls .selectable li" ).index( this );
				var address = addresses[index];
				if (address != null) {
					mapto(address.searchTerm, address.searchArea);
				}
			});
		$( "#pages" ).accordion();
		
		$( "#pageSlider" ).slider({
			value:0,
			min: 0,
			max: ${callPages.size() - 1},
			step: 1,
			slide: function(event, ui) {
				$( "#pageSlider a" ).text( 1 + ui.value );
			},
			create: function(event, ui) {
			  $( "#pageSlider a" ).text( 1 );
			},
		   	change: function(event, ui) {
				$( "#pages" ).accordion("activate", ui.value);		   	  
		   	}
		});
		
		
		//$("#pages").hrzAccordion({
		//	handlePosition     	: "right",
		//	openOnLoad     		: 0,
		//	closeOpenAnimation	: 2
		//});

	});

    var map;
    var geocoder = new google.maps.Geocoder();
    var marker = new google.maps.Marker();
    var nearViewport;
    var markerLocation;
    var addresses = [];
	<c:forEach items="${callPages}" var="callPage">
		<c:forEach items="${callPage}" var="call">
			<c:choose>
				<c:when
					test="${call.googleMapsSearchTerm == null || call.googleMapsSearchArea == null}">
					addresses.push(null);
				</c:when>
				<c:otherwise>
					addresses.push({ "searchTerm" : "${call.googleMapsSearchTerm}", "searchArea" : "${call.googleMapsSearchArea}"});
				</c:otherwise>
			</c:choose>
		</c:forEach>
    </c:forEach>
	$(document).ready(function() {
		$(map).height($(calls).height());
        var mapOptions = {
                center: new google.maps.LatLng(0, 0),
                zoom: 1,
                mapTypeId: google.maps.MapTypeId.ROADMAP
              };
              map = new google.maps.Map(document.getElementById("map"),
                  mapOptions);
              google.maps.event.addListener(marker, 'click', zoom);
    });

    function zoom() {
    	map.fitBounds(nearViewport);
    	map.panTo(markerLocation);
    }
    
	function mapto(address, area) {
	    geocoder.geocode( { 'address': address, 'region' : area }, function(results, status) {
	        if (status == google.maps.GeocoderStatus.OK) {
	          markerLocation = results[0].geometry.location;
	          nearViewport = results[0].geometry.viewport;
	          geocoder.geocode({ 'address' : area }, function(results, status) { 
	        	  marker.setAnimation(google.maps.Animation.DROP);
	        	  marker.setPosition(markerLocation);
	        	  marker.setMap(map);
	        	  marker.setTitle(address);
		          map.fitBounds(results[0].geometry.viewport);               
		          map.panTo(markerLocation);		        	  
	          });
	        } else {
	          alert("Geocode was not successful for the following reason: " + status);
	        }
	      });
	    return false;
	}

</script>
